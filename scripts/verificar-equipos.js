require('dotenv').config();
const mongoose = require('mongoose');
const Equipo = require('../src/models/Equipo');
const Jugador = require('../src/models/Jugador');

// Configuraci√≥n de MongoDB
const MONGODB_URI = process.env.MONGO_URL || 'mongodb://localhost:27017/dodgeball-club';

async function verificarEquipos() {
  try {
    console.log('üîç Conectando a MongoDB...');
    console.log('üìç URI:', MONGODB_URI);
    
    await mongoose.connect(MONGODB_URI, {
      maxPoolSize: 10,
      serverSelectionTimeoutMS: 5000,
      socketTimeoutMS: 45000,
    });
    
    console.log('‚úÖ Conectado a MongoDB');

    console.log('\nüìä Verificando equipos existentes...');
    
    // Obtener todos los equipos
    const equipos = await Equipo.find({});
    console.log(`üìà Total de equipos: ${equipos.length}`);
    
    console.log('\nüìã Lista de equipos:');
    equipos.forEach((equipo, index) => {
      console.log(`${index + 1}. ${equipo.nombre} (ID: ${equipo._id})`);
    });
    
    // Verificar jugadores y sus equipos
    console.log('\nüìä Verificando jugadores y sus equipos...');
    const jugadores = await Jugador.find({});
    console.log(`üìà Total de jugadores: ${jugadores.length}`);
    
    // Agrupar jugadores por equipo seg√∫n los datos originales
    const jugadoresPorEquipo = {
      'BUMBA': [],
      'THE DODGEBALL MONKEYS': [],
      'THE CATCHERS': [],
      'LA NEOFARAFA': []
    };
    
    // Mapeo de jugadores a equipos seg√∫n los datos originales
    const mapeoJugadoresEquipos = {
      'Felipe Demarco': 'BUMBA',
      'Agust√≠n Giles': 'BUMBA',
      'Santiago Giles': 'BUMBA',
      'Diego Burrera': 'BUMBA',
      'Pastor Pastor': 'BUMBA',
      'Santino Barreiro': 'BUMBA',
      'Alejandro Rocca': 'THE DODGEBALL MONKEYS',
      'Valentino Gloodtdfosky': 'THE DODGEBALL MONKEYS',
      'Salvador M√©ndez': 'THE DODGEBALL MONKEYS',
      'Matheo Santos': 'THE DODGEBALL MONKEYS',
      'Tiago Pereira': 'THE DODGEBALL MONKEYS',
      'Ignacio Rodr√≠guez': 'THE DODGEBALL MONKEYS',
      'Guzm√°n Demarco': 'THE CATCHERS',
      'Edewel Cremel': 'THE CATCHERS',
      'Facundo Alonso': 'THE CATCHERS',
      'Mateo Alonso': 'THE CATCHERS',
      'Rafael Garc√≠a': 'LA NEOFARAFA',
      'Ger√≥nimo Nicola': 'LA NEOFARAFA',
      'Patricia Yanes': 'LA NEOFARAFA',
      'Josu√© Arboleda': 'LA NEOFARAFA',
      'Rodrigo P√©rez': 'LA NEOFARAFA',
      'Santiago Gil': 'LA NEOFARAFA',
      'Agust√≠n Sogliano': 'LA NEOFARAFA'
    };
    
    // Agrupar jugadores
    jugadores.forEach(jugador => {
      const nombreCompleto = `${jugador.nombre} ${jugador.apellido}`;
      const equipo = mapeoJugadoresEquipos[nombreCompleto];
      if (equipo && jugadoresPorEquipo[equipo]) {
        jugadoresPorEquipo[equipo].push({
          nombre: jugador.nombre,
          apellido: jugador.apellido,
          numeroCamiseta: jugador.numeroCamiseta,
          email: 'Sin email'
        });
      }
    });
    
    console.log('\nüìã Jugadores por equipo:');
    Object.entries(jugadoresPorEquipo).forEach(([equipo, jugadores]) => {
      console.log(`\nüèÜ ${equipo}: ${jugadores.length} jugadores`);
      jugadores.forEach(jugador => {
        console.log(`  - ${jugador.nombre} ${jugador.apellido} (#${jugador.numeroCamiseta}) - ${jugador.email}`);
      });
    });
    
    // Buscar coincidencias de nombres entre equipos y jugadores
    console.log('\nüîç Buscando coincidencias de nombres...');
    equipos.forEach(equipo => {
      console.log(`\nüèÜ Equipo: ${equipo.nombre}`);
      const jugadoresDelEquipo = jugadoresPorEquipo[equipo.nombre] || [];
      console.log(`  Jugadores asignados: ${jugadoresDelEquipo.length}`);
      
      // Buscar jugadores que podr√≠an pertenecer a este equipo por nombre
      const jugadoresSimilares = jugadores.filter(jugador => {
        const nombreCompleto = `${jugador.nombre} ${jugador.apellido}`.toLowerCase();
        const nombreEquipo = equipo.nombre.toLowerCase();
        return nombreCompleto.includes(nombreEquipo) || nombreEquipo.includes(nombreCompleto);
      });
      
      if (jugadoresSimilares.length > 0) {
        console.log(`  Posibles coincidencias por nombre:`);
        jugadoresSimilares.forEach(j => {
          console.log(`    - ${j.nombre} ${j.apellido}`);
        });
      }
    });
    
    console.log('\n‚úÖ Verificaci√≥n completada');
    
  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå Desconectado de MongoDB');
  }
}

verificarEquipos();
